# name: 'tea4chat-prod'
services:
  proxy:
    image: nginx:alpine
    ports:
      - "80:80"
    depends_on:
      - frontend
      - server
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app_network

  frontend:
    build:
      context: ../ui
      dockerfile: Dockerfile
      secrets:
        - frontend_env
    expose:
      - "80"
    networks:
      - app_network
    env_file:
      - ./envs/frontend.env

  server:
    build:
      context: ../server
      dockerfile: Dockerfile
    expose:
      - "3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ["./scripts/start.sh"]
    env_file:
      - ./envs/server.env
    networks:
      - app_network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgres:
    image: postgres:17-alpine
    expose:
      - "5432"
    env_file:
      - ./envs/server.env
    volumes:
      - ./services/postgres-data-prod:/var/lib/postgresql/data
    healthcheck:
      # DO NOT FORGET TO CHANGE THIS ACCORDING TO THE DB NAME IN THE envs/server.env
      # test: ["CMD-SHELL", "pg_isready -U postgres -d tea4chat-prod"]
      test: ["CMD-SHELL", "pg_isready -U postgres -d tea4chat"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  redis_data: 

secrets:
  frontend_env:
    file: ./envs/frontend.env
